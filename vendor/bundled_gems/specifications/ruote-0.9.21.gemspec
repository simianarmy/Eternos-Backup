# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{ruote}
  s.version = "0.9.21"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["John Mettraux", "Alain Hoang"]
  s.date = %q{2009-09-08}
  s.email = %q{jmettraux@gmail.com}
  s.extra_rdoc_files = ["README.txt"]
  s.files = ["bin/validate-workflow.rb", "lib/openwfe/contextual.rb", "lib/openwfe/def.rb", "lib/openwfe/engine/engine.rb", "lib/openwfe/engine/expool_methods.rb", "lib/openwfe/engine/file_persisted_engine.rb", "lib/openwfe/engine/fs_engine.rb", "lib/openwfe/engine/launch_methods.rb", "lib/openwfe/engine/listener_methods.rb", "lib/openwfe/engine/lookup_methods.rb", "lib/openwfe/engine/participant_methods.rb", "lib/openwfe/engine/status_methods.rb", "lib/openwfe/engine/tc_engine.rb", "lib/openwfe/engine/tt_engine.rb", "lib/openwfe/engine/update_exp_methods.rb", "lib/openwfe/engine.rb", "lib/openwfe/expool/def_parser.rb", "lib/openwfe/expool/errorjournal.rb", "lib/openwfe/expool/errors.rb", "lib/openwfe/expool/expool_pause_methods.rb", "lib/openwfe/expool/expressionpool.rb", "lib/openwfe/expool/expstorage.rb", "lib/openwfe/expool/fs_expstorage.rb", "lib/openwfe/expool/history.rb", "lib/openwfe/expool/journal.rb", "lib/openwfe/expool/journal_replay.rb", "lib/openwfe/expool/representation.rb", "lib/openwfe/expool/tc_expstorage.rb", "lib/openwfe/expool/threaded_expstorage.rb", "lib/openwfe/expool/tt_expstorage.rb", "lib/openwfe/expool/wfidgen.rb", "lib/openwfe/expool/yaml_errorjournal.rb", "lib/openwfe/expressions/condition.rb", "lib/openwfe/expressions/environment.rb", "lib/openwfe/expressions/expression_map.rb", "lib/openwfe/expressions/expression_tree.rb", "lib/openwfe/expressions/fe_cancel.rb", "lib/openwfe/expressions/fe_command.rb", "lib/openwfe/expressions/fe_concurrence.rb", "lib/openwfe/expressions/fe_cron.rb", "lib/openwfe/expressions/fe_cursor.rb", "lib/openwfe/expressions/fe_define.rb", "lib/openwfe/expressions/fe_do.rb", "lib/openwfe/expressions/fe_equals.rb", "lib/openwfe/expressions/fe_error.rb", "lib/openwfe/expressions/fe_filter.rb", "lib/openwfe/expressions/fe_filter_definition.rb", "lib/openwfe/expressions/fe_fqv.rb", "lib/openwfe/expressions/fe_http.rb", "lib/openwfe/expressions/fe_if.rb", "lib/openwfe/expressions/fe_iterator.rb", "lib/openwfe/expressions/fe_listen.rb", "lib/openwfe/expressions/fe_losfor.rb", "lib/openwfe/expressions/fe_misc.rb", "lib/openwfe/expressions/fe_participant.rb", "lib/openwfe/expressions/fe_reserve.rb", "lib/openwfe/expressions/fe_save.rb", "lib/openwfe/expressions/fe_sequence.rb", "lib/openwfe/expressions/fe_set.rb", "lib/openwfe/expressions/fe_step.rb", "lib/openwfe/expressions/fe_subprocess.rb", "lib/openwfe/expressions/fe_timeout.rb", "lib/openwfe/expressions/fe_wait.rb", "lib/openwfe/expressions/fe_when.rb", "lib/openwfe/expressions/filter.rb", "lib/openwfe/expressions/flowexpression.rb", "lib/openwfe/expressions/iterator.rb", "lib/openwfe/expressions/merge.rb", "lib/openwfe/expressions/raw.rb", "lib/openwfe/expressions/rprocdef.rb", "lib/openwfe/expressions/time.rb", "lib/openwfe/expressions/timeout.rb", "lib/openwfe/expressions/value.rb", "lib/openwfe/extras/engine/ar_engine.rb", "lib/openwfe/extras/engine/db_persisted_engine.rb", "lib/openwfe/extras/engine/dm_engine.rb", "lib/openwfe/extras/expool/ar_expstorage.rb", "lib/openwfe/extras/expool/db_errorjournal.rb", "lib/openwfe/extras/expool/db_expstorage.rb", "lib/openwfe/extras/expool/db_history.rb", "lib/openwfe/extras/expool/dm_expstorage.rb", "lib/openwfe/extras/listeners/jabber_listeners.rb", "lib/openwfe/extras/listeners/jabberlisteners.rb", "lib/openwfe/extras/listeners/sqs_listeners.rb", "lib/openwfe/extras/misc/activityfeed.rb", "lib/openwfe/extras/misc/basecamp.rb", "lib/openwfe/extras/misc/jabber_common.rb", "lib/openwfe/extras/participants/active_participants.rb", "lib/openwfe/extras/participants/active_resource_participants.rb", "lib/openwfe/extras/participants/activeparticipants.rb", "lib/openwfe/extras/participants/ar_participants.rb", "lib/openwfe/extras/participants/atomfeed_participants.rb", "lib/openwfe/extras/participants/atompub_participants.rb", "lib/openwfe/extras/participants/basecamp_participants.rb", "lib/openwfe/extras/participants/decision_participants.rb", "lib/openwfe/extras/participants/jabber_participants.rb", "lib/openwfe/extras/participants/jabberparticipants.rb", "lib/openwfe/extras/participants/nanite_mapper_participant.rb", "lib/openwfe/extras/participants/sqs_participants.rb", "lib/openwfe/extras/participants/twitter_participants.rb", "lib/openwfe/extras/singlecon.rb", "lib/openwfe/filterdef.rb", "lib/openwfe/flowexpressionid.rb", "lib/openwfe/listeners/listener.rb", "lib/openwfe/listeners/listeners.rb", "lib/openwfe/logging.rb", "lib/openwfe/omixins.rb", "lib/openwfe/participants/mail_participants.rb", "lib/openwfe/participants/participant.rb", "lib/openwfe/participants/participant_map.rb", "lib/openwfe/participants/participants.rb", "lib/openwfe/participants/soap_participants.rb", "lib/openwfe/participants/store_participants.rb", "lib/openwfe/participants.rb", "lib/openwfe/representations.rb", "lib/openwfe/rexml.rb", "lib/openwfe/rudefinitions.rb", "lib/openwfe/service.rb", "lib/openwfe/tools/flowtracer.rb", "lib/openwfe/util/dollar.rb", "lib/openwfe/util/irb.rb", "lib/openwfe/util/json.rb", "lib/openwfe/util/observable.rb", "lib/openwfe/util/ometa.rb", "lib/openwfe/util/treechecker.rb", "lib/openwfe/util/workqueue.rb", "lib/openwfe/util/xml.rb", "lib/openwfe/utils.rb", "lib/openwfe/version.rb", "lib/openwfe/workitem.rb", "lib/openwfe/worklist/storelocks.rb", "lib/openwfe/worklist/storeparticipant.rb", "lib/openwfe/worklist/worklist.rb", "lib/openwfe.rb", "lib/pooltool.ru", "test/ar_test_connection.rb", "test/bm/fatxml.rb", "test/bm/load_26c.rb", "test/dm_test_connection.rb", "test/extras/base.rb", "test/extras/et_0_sqs.rb", "test/extras/et_jabber_test.rb", "test/extras/et_nanite_test.rb", "test/extras/test.rb", "test/functional/base.rb", "test/functional/db_ft_0_ar_participants.rb", "test/functional/eft_0_process_definition.rb", "test/functional/eft_10_unset.rb", "test/functional/eft_11_sleep.rb", "test/functional/eft_12_wait.rb", "test/functional/eft_13_cursor.rb", "test/functional/eft_14_loop.rb", "test/functional/eft_15_undo.rb", "test/functional/eft_16_redo.rb", "test/functional/eft_17_iterator.rb", "test/functional/eft_18_eval.rb", "test/functional/eft_1_print.rb", "test/functional/eft_2_sequence.rb", "test/functional/eft_3_equals.rb", "test/functional/eft_4_if.rb", "test/functional/eft_5_eval.rb", "test/functional/eft_6_reval.rb", "test/functional/eft_7_exp.rb", "test/functional/eft_8_log.rb", "test/functional/eft_9_set.rb", "test/functional/engine_helper.rb", "test/functional/ft_0_vars_at_launch.rb", "test/functional/ft_10_cancel.rb", "test/functional/ft_11_lookup_processes.rb", "test/functional/ft_12_expstorage_find_expressions.rb", "test/functional/ft_13_store_participants.rb", "test/functional/ft_14_scheduled_launch.rb", "test/functional/ft_15_reapply.rb", "test/functional/ft_16_conditional.rb", "test/functional/ft_1_process_status.rb", "test/functional/ft_2_file_listener.rb", "test/functional/ft_3_on_cancel.rb", "test/functional/ft_4_on_error.rb", "test/functional/ft_5_process_uri.rb", "test/functional/ft_6_process_status.rb", "test/functional/ft_7_parameters.rb", "test/functional/ft_8_dollar.rb", "test/functional/ft_9_register_participants.rb", "test/functional/restart_base.rb", "test/functional/rft_0_sleep.rb", "test/functional/test.rb", "test/path_helper.rb", "test/test.rb", "test/test_helper.rb", "test/unit/test.rb", "test/unit/ut_0_fei.rb", "test/unit/ut_10_lookup_attribute.rb", "test/unit/ut_11_filter.rb", "test/unit/ut_12_conditional.rb", "test/unit/ut_13_xmlutil.rb", "test/unit/ut_14_var_field_lookup.rb", "test/unit/ut_15_fe_att_lookup.rb", "test/unit/ut_16_expstorage_findexp.rb", "test/unit/ut_17_representations.rb", "test/unit/ut_17b_representations_hash.rb", "test/unit/ut_17c_representations_errors.rb", "test/unit/ut_18_store_lock.rb", "test/unit/ut_1_wfid.rb", "test/unit/ut_2_utils.rb", "test/unit/ut_2a_json.rb", "test/unit/ut_3_expmap.rb", "test/unit/ut_4_fulldup.rb", "test/unit/ut_5_observable.rb", "test/unit/ut_6_treechecker.rb", "test/unit/ut_7_parser_ruby.rb", "test/unit/ut_7b_parser_ruby.rb", "test/unit/ut_8_parser_description.rb", "test/unit/ut_9_workitem.rb", "examples/about_state.rb", "examples/bigflow.rb", "examples/csv_weather.rb", "examples/doc_padmin_code.rb", "examples/engine_template.rb", "examples/flickr_report.rb", "examples/flowtracing.rb", "examples/kotoba.rb", "examples/mano_tracker.rb", "examples/openwferu.rb", "examples/quickstart.rb", "examples/quotereporter.rb", "examples/simple.rb", "README.txt"]
  s.homepage = %q{http://openwferu.rubyforge.org}
  s.require_paths = ["lib"]
  s.requirements = ["builder", "rufus-lru", "rufus-scheduler", "rufus-dollar", "rufus-treechecker", "rufus-mnemo", "rufus-verbs"]
  s.rubyforge_project = %q{openwferu}
  s.rubygems_version = %q{1.3.5}
  s.summary = %q{an open source ruby workflow and bpm engine}
  s.test_files = ["test/test.rb"]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<builder>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-lru>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-scheduler>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-dollar>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-treechecker>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-mnemo>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-verbs>, [">= 0"])
    else
      s.add_dependency(%q<builder>, [">= 0"])
      s.add_dependency(%q<rufus-lru>, [">= 0"])
      s.add_dependency(%q<rufus-scheduler>, [">= 0"])
      s.add_dependency(%q<rufus-dollar>, [">= 0"])
      s.add_dependency(%q<rufus-treechecker>, [">= 0"])
      s.add_dependency(%q<rufus-mnemo>, [">= 0"])
      s.add_dependency(%q<rufus-verbs>, [">= 0"])
    end
  else
    s.add_dependency(%q<builder>, [">= 0"])
    s.add_dependency(%q<rufus-lru>, [">= 0"])
    s.add_dependency(%q<rufus-scheduler>, [">= 0"])
    s.add_dependency(%q<rufus-dollar>, [">= 0"])
    s.add_dependency(%q<rufus-treechecker>, [">= 0"])
    s.add_dependency(%q<rufus-mnemo>, [">= 0"])
    s.add_dependency(%q<rufus-verbs>, [">= 0"])
  end
end
